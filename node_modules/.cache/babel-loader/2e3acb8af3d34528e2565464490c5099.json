{"ast":null,"code":"import { CartAPI } from \"api\";\nimport { delay, put, takeEvery } from \"redux-saga/effects\";\nimport { addProductToCartAction, addProductToCartFailed, addProductToCartSuccess, deleteProductCartAction, deleteProductCartActionFailed, deleteProductCartActionSuccess, getListCartAction, getListCartActionFailed, getListCartActionSuccess, updateProductCartAction, updateProductCartActionFailed, updateProductCartActionSuccess } from \"stores/slices/cart.slice\";\n\nfunction* getListCart(action) {\n  try {\n    yield delay(200);\n    const response = yield CartAPI.fetchCart(action.payload);\n    const productData = response.data;\n    const totalProduct = response.data.length; // Put 1 action đã được định nghĩa ở slice\n\n    yield put(getListCartActionSuccess({\n      data: productData,\n      totalProduct: totalProduct\n    }));\n  } catch (e) {\n    // Put 1 action đã được định nghĩa ở slice\n    yield put(getListCartActionFailed(e.response.data));\n  }\n}\n\nfunction* addProductToCart(action) {\n  try {\n    const response = yield CartAPI.addCart(action.payload); // Put 1 action đã được định nghĩa ở slice\n\n    yield put(addProductToCartSuccess(response.data));\n  } catch (e) {\n    // Put 1 action đã được định nghĩa ở slice\n    console.log(\"e:\", e);\n    yield put(addProductToCartFailed(e.response.data));\n  }\n}\n\nfunction* deleteProductCart(action) {\n  try {\n    const response = yield CartAPI.deleteCart(action.payload); // Put 1 action đã được định nghĩa ở slice\n\n    yield put(deleteProductCartActionSuccess(response.data));\n  } catch (e) {\n    // Put 1 action đã được định nghĩa ở slice\n    yield put(deleteProductCartActionFailed(e.response.data));\n  }\n}\n\nfunction* updateProductCart(action) {\n  try {\n    const response = yield CartAPI.editCart(action.payload.id, action.payload.data); // Put 1 action đã được định nghĩa ở slice\n\n    yield put(updateProductCartActionSuccess(response.data));\n  } catch (e) {\n    // Put 1 action đã được định nghĩa ở slice\n    // console.log(\"error:\", e);\n    yield put(updateProductCartActionFailed(e.response.data));\n  }\n}\n\nexport function* cartSaga() {\n  yield takeEvery(addProductToCartAction, addProductToCart);\n  yield takeEvery(getListCartAction, getListCart);\n  yield takeEvery(deleteProductCartAction, deleteProductCart);\n  yield takeEvery(updateProductCartAction, updateProductCart);\n}","map":{"version":3,"names":["CartAPI","delay","put","takeEvery","addProductToCartAction","addProductToCartFailed","addProductToCartSuccess","deleteProductCartAction","deleteProductCartActionFailed","deleteProductCartActionSuccess","getListCartAction","getListCartActionFailed","getListCartActionSuccess","updateProductCartAction","updateProductCartActionFailed","updateProductCartActionSuccess","getListCart","action","response","fetchCart","payload","productData","data","totalProduct","length","e","addProductToCart","addCart","console","log","deleteProductCart","deleteCart","updateProductCart","editCart","id","cartSaga"],"sources":["/Users/luongvantrung/Dropbox/Dropbox/Mac/Desktop/Final-project-fe27/src/stores/sagas/cart.saga.js"],"sourcesContent":["import { CartAPI } from \"api\";\nimport { delay, put, takeEvery } from \"redux-saga/effects\";\nimport {\n    addProductToCartAction,\n    addProductToCartFailed,\n    addProductToCartSuccess,\n    deleteProductCartAction,\n    deleteProductCartActionFailed,\n    deleteProductCartActionSuccess,\n    getListCartAction,\n    getListCartActionFailed,\n    getListCartActionSuccess,\n    updateProductCartAction,\n    updateProductCartActionFailed,\n    updateProductCartActionSuccess\n} from \"stores/slices/cart.slice\";\n\nfunction* getListCart(action) {\n    try {\n        yield delay(200);\n        const response = yield CartAPI.fetchCart(action.payload);\n        const productData = response.data;\n        const totalProduct = response.data.length;\n        // Put 1 action đã được định nghĩa ở slice\n        yield put(\n            getListCartActionSuccess({\n                data: productData,\n                totalProduct: totalProduct,\n            })\n        );\n    } catch (e) {\n        // Put 1 action đã được định nghĩa ở slice\n        yield put(getListCartActionFailed(e.response.data));\n    }\n}\n\nfunction* addProductToCart(action) {\n    try {\n        const response = yield CartAPI.addCart(action.payload);\n        // Put 1 action đã được định nghĩa ở slice\n        yield put(addProductToCartSuccess(response.data));\n    } catch (e) {\n        // Put 1 action đã được định nghĩa ở slice\n        console.log(\"e:\", e);\n        yield put(addProductToCartFailed(e.response.data));\n    }\n}\n\nfunction* deleteProductCart(action) {\n    try {   \n        const response = yield CartAPI.deleteCart(action.payload);\n        // Put 1 action đã được định nghĩa ở slice\n        yield put(\n            deleteProductCartActionSuccess(response.data)\n        );\n    } catch (e) {\n        // Put 1 action đã được định nghĩa ở slice\n        yield put(deleteProductCartActionFailed(e.response.data));\n    }\n}\n\nfunction* updateProductCart(action) {\n    try {\n        const response = yield CartAPI.editCart(action.payload.id, action.payload.data);\n        // Put 1 action đã được định nghĩa ở slice\n        yield put(\n            updateProductCartActionSuccess(response.data)\n        );\n    } catch (e) {\n        // Put 1 action đã được định nghĩa ở slice\n        // console.log(\"error:\", e);\n        yield put(updateProductCartActionFailed(e.response.data));\n    }\n}\nexport function* cartSaga() {\n    yield takeEvery(addProductToCartAction, addProductToCart);\n    yield takeEvery(getListCartAction, getListCart);\n    yield takeEvery(deleteProductCartAction, deleteProductCart);\n    yield takeEvery(updateProductCartAction, updateProductCart);\n}"],"mappings":"AAAA,SAASA,OAAT,QAAwB,KAAxB;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,SAArB,QAAsC,oBAAtC;AACA,SACIC,sBADJ,EAEIC,sBAFJ,EAGIC,uBAHJ,EAIIC,uBAJJ,EAKIC,6BALJ,EAMIC,8BANJ,EAOIC,iBAPJ,EAQIC,uBARJ,EASIC,wBATJ,EAUIC,uBAVJ,EAWIC,6BAXJ,EAYIC,8BAZJ,QAaO,0BAbP;;AAeA,UAAUC,WAAV,CAAsBC,MAAtB,EAA8B;EAC1B,IAAI;IACA,MAAMhB,KAAK,CAAC,GAAD,CAAX;IACA,MAAMiB,QAAQ,GAAG,MAAMlB,OAAO,CAACmB,SAAR,CAAkBF,MAAM,CAACG,OAAzB,CAAvB;IACA,MAAMC,WAAW,GAAGH,QAAQ,CAACI,IAA7B;IACA,MAAMC,YAAY,GAAGL,QAAQ,CAACI,IAAT,CAAcE,MAAnC,CAJA,CAKA;;IACA,MAAMtB,GAAG,CACLU,wBAAwB,CAAC;MACrBU,IAAI,EAAED,WADe;MAErBE,YAAY,EAAEA;IAFO,CAAD,CADnB,CAAT;EAMH,CAZD,CAYE,OAAOE,CAAP,EAAU;IACR;IACA,MAAMvB,GAAG,CAACS,uBAAuB,CAACc,CAAC,CAACP,QAAF,CAAWI,IAAZ,CAAxB,CAAT;EACH;AACJ;;AAED,UAAUI,gBAAV,CAA2BT,MAA3B,EAAmC;EAC/B,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMlB,OAAO,CAAC2B,OAAR,CAAgBV,MAAM,CAACG,OAAvB,CAAvB,CADA,CAEA;;IACA,MAAMlB,GAAG,CAACI,uBAAuB,CAACY,QAAQ,CAACI,IAAV,CAAxB,CAAT;EACH,CAJD,CAIE,OAAOG,CAAP,EAAU;IACR;IACAG,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBJ,CAAlB;IACA,MAAMvB,GAAG,CAACG,sBAAsB,CAACoB,CAAC,CAACP,QAAF,CAAWI,IAAZ,CAAvB,CAAT;EACH;AACJ;;AAED,UAAUQ,iBAAV,CAA4Bb,MAA5B,EAAoC;EAChC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMlB,OAAO,CAAC+B,UAAR,CAAmBd,MAAM,CAACG,OAA1B,CAAvB,CADA,CAEA;;IACA,MAAMlB,GAAG,CACLO,8BAA8B,CAACS,QAAQ,CAACI,IAAV,CADzB,CAAT;EAGH,CAND,CAME,OAAOG,CAAP,EAAU;IACR;IACA,MAAMvB,GAAG,CAACM,6BAA6B,CAACiB,CAAC,CAACP,QAAF,CAAWI,IAAZ,CAA9B,CAAT;EACH;AACJ;;AAED,UAAUU,iBAAV,CAA4Bf,MAA5B,EAAoC;EAChC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMlB,OAAO,CAACiC,QAAR,CAAiBhB,MAAM,CAACG,OAAP,CAAec,EAAhC,EAAoCjB,MAAM,CAACG,OAAP,CAAeE,IAAnD,CAAvB,CADA,CAEA;;IACA,MAAMpB,GAAG,CACLa,8BAA8B,CAACG,QAAQ,CAACI,IAAV,CADzB,CAAT;EAGH,CAND,CAME,OAAOG,CAAP,EAAU;IACR;IACA;IACA,MAAMvB,GAAG,CAACY,6BAA6B,CAACW,CAAC,CAACP,QAAF,CAAWI,IAAZ,CAA9B,CAAT;EACH;AACJ;;AACD,OAAO,UAAUa,QAAV,GAAqB;EACxB,MAAMhC,SAAS,CAACC,sBAAD,EAAyBsB,gBAAzB,CAAf;EACA,MAAMvB,SAAS,CAACO,iBAAD,EAAoBM,WAApB,CAAf;EACA,MAAMb,SAAS,CAACI,uBAAD,EAA0BuB,iBAA1B,CAAf;EACA,MAAM3B,SAAS,CAACU,uBAAD,EAA0BmB,iBAA1B,CAAf;AACH"},"metadata":{},"sourceType":"module"}