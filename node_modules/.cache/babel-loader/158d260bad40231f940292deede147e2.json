{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/helpers/esm/regeneratorRuntime\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport classNames from 'classnames';\nimport RcUpload from 'rc-upload';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport * as React from 'react';\nimport { flushSync } from 'react-dom';\nimport { ConfigContext } from '../config-provider';\nimport DisabledContext from '../config-provider/DisabledContext';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport warning from '../_util/warning';\nimport UploadList from './UploadList';\nimport { file2Obj, getFileItem, removeFileItem, updateFileList } from './utils';\nexport var LIST_IGNORE = \"__LIST_IGNORE_\".concat(Date.now(), \"__\");\n\nvar InternalUpload = function InternalUpload(props, ref) {\n  var _classNames2;\n\n  var fileList = props.fileList,\n      defaultFileList = props.defaultFileList,\n      onRemove = props.onRemove,\n      _props$showUploadList = props.showUploadList,\n      showUploadList = _props$showUploadList === void 0 ? true : _props$showUploadList,\n      _props$listType = props.listType,\n      listType = _props$listType === void 0 ? 'text' : _props$listType,\n      onPreview = props.onPreview,\n      onDownload = props.onDownload,\n      onChange = props.onChange,\n      onDrop = props.onDrop,\n      previewFile = props.previewFile,\n      customDisabled = props.disabled,\n      propLocale = props.locale,\n      iconRender = props.iconRender,\n      isImageUrl = props.isImageUrl,\n      progress = props.progress,\n      customizePrefixCls = props.prefixCls,\n      className = props.className,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'select' : _props$type,\n      children = props.children,\n      style = props.style,\n      itemRender = props.itemRender,\n      maxCount = props.maxCount,\n      _props$data = props.data,\n      data = _props$data === void 0 ? {} : _props$data,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      _props$action = props.action,\n      action = _props$action === void 0 ? '' : _props$action,\n      _props$accept = props.accept,\n      accept = _props$accept === void 0 ? '' : _props$accept,\n      _props$supportServerR = props.supportServerRender,\n      supportServerRender = _props$supportServerR === void 0 ? true : _props$supportServerR; // ===================== Disabled =====================\n\n  var disabled = React.useContext(DisabledContext);\n  var mergedDisabled = customDisabled !== null && customDisabled !== void 0 ? customDisabled : disabled;\n\n  var _useMergedState = useMergedState(defaultFileList || [], {\n    value: fileList,\n    postState: function postState(list) {\n      return list !== null && list !== void 0 ? list : [];\n    }\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedFileList = _useMergedState2[0],\n      setMergedFileList = _useMergedState2[1];\n\n  var _React$useState = React.useState('drop'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      dragState = _React$useState2[0],\n      setDragState = _React$useState2[1];\n\n  var upload = React.useRef(null);\n  process.env.NODE_ENV !== \"production\" ? warning('fileList' in props || !('value' in props), 'Upload', '`value` is not a valid prop, do you mean `fileList`?') : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!('transformFile' in props), 'Upload', '`transformFile` is deprecated. Please use `beforeUpload` directly.') : void 0; // Control mode will auto fill file uid if not provided\n\n  React.useMemo(function () {\n    var timestamp = Date.now();\n    (fileList || []).forEach(function (file, index) {\n      if (!file.uid && !Object.isFrozen(file)) {\n        file.uid = \"__AUTO__\".concat(timestamp, \"_\").concat(index, \"__\");\n      }\n    });\n  }, [fileList]);\n\n  var onInternalChange = function onInternalChange(file, changedFileList, event) {\n    var cloneList = _toConsumableArray(changedFileList); // Cut to match count\n\n\n    if (maxCount === 1) {\n      cloneList = cloneList.slice(-1);\n    } else if (maxCount) {\n      cloneList = cloneList.slice(0, maxCount);\n    } // Prevent React18 auto batch since input[upload] trigger process at same time\n    // which makes fileList closure problem\n\n\n    flushSync(function () {\n      setMergedFileList(cloneList);\n    });\n    var changeInfo = {\n      file: file,\n      fileList: cloneList\n    };\n\n    if (event) {\n      changeInfo.event = event;\n    }\n\n    onChange === null || onChange === void 0 ? void 0 : onChange(changeInfo);\n  };\n\n  var mergedBeforeUpload = function mergedBeforeUpload(file, fileListArgs) {\n    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var beforeUpload, transformFile, parsedFile, result;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              beforeUpload = props.beforeUpload, transformFile = props.transformFile;\n              parsedFile = file;\n\n              if (!beforeUpload) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 5;\n              return beforeUpload(file, fileListArgs);\n\n            case 5:\n              result = _context.sent;\n\n              if (!(result === false)) {\n                _context.next = 8;\n                break;\n              }\n\n              return _context.abrupt(\"return\", false);\n\n            case 8:\n              // Hack for LIST_IGNORE, we add additional info to remove from the list\n              delete file[LIST_IGNORE];\n\n              if (!(result === LIST_IGNORE)) {\n                _context.next = 12;\n                break;\n              }\n\n              Object.defineProperty(file, LIST_IGNORE, {\n                value: true,\n                configurable: true\n              });\n              return _context.abrupt(\"return\", false);\n\n            case 12:\n              if (_typeof(result) === 'object' && result) {\n                parsedFile = result;\n              }\n\n            case 13:\n              if (!transformFile) {\n                _context.next = 17;\n                break;\n              }\n\n              _context.next = 16;\n              return transformFile(parsedFile);\n\n            case 16:\n              parsedFile = _context.sent;\n\n            case 17:\n              return _context.abrupt(\"return\", parsedFile);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n  };\n\n  var onBatchStart = function onBatchStart(batchFileInfoList) {\n    // Skip file which marked as `LIST_IGNORE`, these file will not add to file list\n    var filteredFileInfoList = batchFileInfoList.filter(function (info) {\n      return !info.file[LIST_IGNORE];\n    }); // Nothing to do since no file need upload\n\n    if (!filteredFileInfoList.length) {\n      return;\n    }\n\n    var objectFileList = filteredFileInfoList.map(function (info) {\n      return file2Obj(info.file);\n    }); // Concat new files with prev files\n\n    var newFileList = _toConsumableArray(mergedFileList);\n\n    objectFileList.forEach(function (fileObj) {\n      // Replace file if exist\n      newFileList = updateFileList(fileObj, newFileList);\n    });\n    objectFileList.forEach(function (fileObj, index) {\n      // Repeat trigger `onChange` event for compatible\n      var triggerFileObj = fileObj;\n\n      if (!filteredFileInfoList[index].parsedFile) {\n        // `beforeUpload` return false\n        var originFileObj = fileObj.originFileObj;\n        var clone;\n\n        try {\n          clone = new File([originFileObj], originFileObj.name, {\n            type: originFileObj.type\n          });\n        } catch (e) {\n          clone = new Blob([originFileObj], {\n            type: originFileObj.type\n          });\n          clone.name = originFileObj.name;\n          clone.lastModifiedDate = new Date();\n          clone.lastModified = new Date().getTime();\n        }\n\n        clone.uid = fileObj.uid;\n        triggerFileObj = clone;\n      } else {\n        // Inject `uploading` status\n        fileObj.status = 'uploading';\n      }\n\n      onInternalChange(triggerFileObj, newFileList);\n    });\n  };\n\n  var onSuccess = function onSuccess(response, file, xhr) {\n    try {\n      if (typeof response === 'string') {\n        response = JSON.parse(response);\n      }\n    } catch (e) {\n      /* do nothing */\n    } // removed\n\n\n    if (!getFileItem(file, mergedFileList)) {\n      return;\n    }\n\n    var targetItem = file2Obj(file);\n    targetItem.status = 'done';\n    targetItem.percent = 100;\n    targetItem.response = response;\n    targetItem.xhr = xhr;\n    var nextFileList = updateFileList(targetItem, mergedFileList);\n    onInternalChange(targetItem, nextFileList);\n  };\n\n  var onProgress = function onProgress(e, file) {\n    // removed\n    if (!getFileItem(file, mergedFileList)) {\n      return;\n    }\n\n    var targetItem = file2Obj(file);\n    targetItem.status = 'uploading';\n    targetItem.percent = e.percent;\n    var nextFileList = updateFileList(targetItem, mergedFileList);\n    onInternalChange(targetItem, nextFileList, e);\n  };\n\n  var onError = function onError(error, response, file) {\n    // removed\n    if (!getFileItem(file, mergedFileList)) {\n      return;\n    }\n\n    var targetItem = file2Obj(file);\n    targetItem.error = error;\n    targetItem.response = response;\n    targetItem.status = 'error';\n    var nextFileList = updateFileList(targetItem, mergedFileList);\n    onInternalChange(targetItem, nextFileList);\n  };\n\n  var handleRemove = function handleRemove(file) {\n    var currentFile;\n    Promise.resolve(typeof onRemove === 'function' ? onRemove(file) : onRemove).then(function (ret) {\n      var _a; // Prevent removing file\n\n\n      if (ret === false) {\n        return;\n      }\n\n      var removedFileList = removeFileItem(file, mergedFileList);\n\n      if (removedFileList) {\n        currentFile = _extends(_extends({}, file), {\n          status: 'removed'\n        });\n        mergedFileList === null || mergedFileList === void 0 ? void 0 : mergedFileList.forEach(function (item) {\n          var matchKey = currentFile.uid !== undefined ? 'uid' : 'name';\n\n          if (item[matchKey] === currentFile[matchKey] && !Object.isFrozen(item)) {\n            item.status = 'removed';\n          }\n        });\n        (_a = upload.current) === null || _a === void 0 ? void 0 : _a.abort(currentFile);\n        onInternalChange(currentFile, removedFileList);\n      }\n    });\n  };\n\n  var onFileDrop = function onFileDrop(e) {\n    setDragState(e.type);\n\n    if (e.type === 'drop') {\n      onDrop === null || onDrop === void 0 ? void 0 : onDrop(e);\n    }\n  }; // Test needs\n\n\n  React.useImperativeHandle(ref, function () {\n    return {\n      onBatchStart: onBatchStart,\n      onSuccess: onSuccess,\n      onProgress: onProgress,\n      onError: onError,\n      fileList: mergedFileList,\n      upload: upload.current\n    };\n  });\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var prefixCls = getPrefixCls('upload', customizePrefixCls);\n\n  var rcUploadProps = _extends(_extends({\n    onBatchStart: onBatchStart,\n    onError: onError,\n    onProgress: onProgress,\n    onSuccess: onSuccess\n  }, props), {\n    data: data,\n    multiple: multiple,\n    action: action,\n    accept: accept,\n    supportServerRender: supportServerRender,\n    prefixCls: prefixCls,\n    disabled: mergedDisabled,\n    beforeUpload: mergedBeforeUpload,\n    onChange: undefined\n  });\n\n  delete rcUploadProps.className;\n  delete rcUploadProps.style; // Remove id to avoid open by label when trigger is hidden\n  // !children: https://github.com/ant-design/ant-design/issues/14298\n  // disabled: https://github.com/ant-design/ant-design/issues/16478\n  //           https://github.com/ant-design/ant-design/issues/24197\n\n  if (!children || mergedDisabled) {\n    delete rcUploadProps.id;\n  }\n\n  var renderUploadList = function renderUploadList(button, buttonVisible) {\n    return showUploadList ? /*#__PURE__*/React.createElement(LocaleReceiver, {\n      componentName: \"Upload\",\n      defaultLocale: defaultLocale.Upload\n    }, function (contextLocale) {\n      var _ref = typeof showUploadList === 'boolean' ? {} : showUploadList,\n          showRemoveIcon = _ref.showRemoveIcon,\n          showPreviewIcon = _ref.showPreviewIcon,\n          showDownloadIcon = _ref.showDownloadIcon,\n          removeIcon = _ref.removeIcon,\n          previewIcon = _ref.previewIcon,\n          downloadIcon = _ref.downloadIcon;\n\n      return /*#__PURE__*/React.createElement(UploadList, {\n        prefixCls: prefixCls,\n        listType: listType,\n        items: mergedFileList,\n        previewFile: previewFile,\n        onPreview: onPreview,\n        onDownload: onDownload,\n        onRemove: handleRemove,\n        showRemoveIcon: !mergedDisabled && showRemoveIcon,\n        showPreviewIcon: showPreviewIcon,\n        showDownloadIcon: showDownloadIcon,\n        removeIcon: removeIcon,\n        previewIcon: previewIcon,\n        downloadIcon: downloadIcon,\n        iconRender: iconRender,\n        locale: _extends(_extends({}, contextLocale), propLocale),\n        isImageUrl: isImageUrl,\n        progress: progress,\n        appendAction: button,\n        appendActionVisible: buttonVisible,\n        itemRender: itemRender\n      });\n    }) : button;\n  };\n\n  if (type === 'drag') {\n    var _classNames;\n\n    var dragCls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-drag\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-drag-uploading\"), mergedFileList.some(function (file) {\n      return file.status === 'uploading';\n    })), _defineProperty(_classNames, \"\".concat(prefixCls, \"-drag-hover\"), dragState === 'dragover'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), mergedDisabled), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n    return /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(\"div\", {\n      className: dragCls,\n      onDrop: onFileDrop,\n      onDragOver: onFileDrop,\n      onDragLeave: onFileDrop,\n      style: style\n    }, /*#__PURE__*/React.createElement(RcUpload, _extends({}, rcUploadProps, {\n      ref: upload,\n      className: \"\".concat(prefixCls, \"-btn\")\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-drag-container\")\n    }, children))), renderUploadList());\n  }\n\n  var uploadButtonCls = classNames(prefixCls, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-select\"), true), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-select-\").concat(listType), true), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-disabled\"), mergedDisabled), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames2));\n\n  var renderUploadButton = function renderUploadButton(uploadButtonStyle) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: uploadButtonCls,\n      style: uploadButtonStyle\n    }, /*#__PURE__*/React.createElement(RcUpload, _extends({}, rcUploadProps, {\n      ref: upload\n    })));\n  };\n\n  var uploadButton = renderUploadButton(children ? undefined : {\n    display: 'none'\n  });\n\n  if (listType === 'picture-card') {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames(\"\".concat(prefixCls, \"-picture-card-wrapper\"), className)\n    }, renderUploadList(uploadButton, !!children));\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: className\n  }, uploadButton, renderUploadList());\n};\n\nvar Upload = /*#__PURE__*/React.forwardRef(InternalUpload);\n\nif (process.env.NODE_ENV !== 'production') {\n  Upload.displayName = 'Upload';\n}\n\nexport default Upload;","map":{"version":3,"names":["_defineProperty","_extends","_regeneratorRuntime","_typeof","_toConsumableArray","_slicedToArray","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","classNames","RcUpload","useMergedState","React","flushSync","ConfigContext","DisabledContext","LocaleReceiver","defaultLocale","warning","UploadList","file2Obj","getFileItem","removeFileItem","updateFileList","LIST_IGNORE","concat","Date","now","InternalUpload","props","ref","_classNames2","fileList","defaultFileList","onRemove","_props$showUploadList","showUploadList","_props$listType","listType","onPreview","onDownload","onChange","onDrop","previewFile","customDisabled","disabled","propLocale","locale","iconRender","isImageUrl","progress","customizePrefixCls","prefixCls","className","_props$type","type","children","style","itemRender","maxCount","_props$data","data","_props$multiple","multiple","_props$action","action","_props$accept","accept","_props$supportServerR","supportServerRender","useContext","mergedDisabled","_useMergedState","postState","list","_useMergedState2","mergedFileList","setMergedFileList","_React$useState","useState","_React$useState2","dragState","setDragState","upload","useRef","process","env","NODE_ENV","useMemo","timestamp","forEach","file","index","uid","Object","isFrozen","onInternalChange","changedFileList","event","cloneList","slice","changeInfo","mergedBeforeUpload","fileListArgs","mark","_callee","beforeUpload","transformFile","parsedFile","wrap","_callee$","_context","prev","sent","abrupt","defineProperty","configurable","stop","onBatchStart","batchFileInfoList","filteredFileInfoList","filter","info","length","objectFileList","map","newFileList","fileObj","triggerFileObj","originFileObj","clone","File","name","Blob","lastModifiedDate","lastModified","getTime","status","onSuccess","response","xhr","JSON","parse","targetItem","percent","nextFileList","onProgress","onError","error","handleRemove","currentFile","ret","_a","removedFileList","item","matchKey","undefined","current","abort","onFileDrop","useImperativeHandle","_React$useContext","getPrefixCls","direction","rcUploadProps","id","renderUploadList","button","buttonVisible","createElement","componentName","Upload","contextLocale","_ref","showRemoveIcon","showPreviewIcon","showDownloadIcon","removeIcon","previewIcon","downloadIcon","items","appendAction","appendActionVisible","_classNames","dragCls","some","onDragOver","onDragLeave","uploadButtonCls","renderUploadButton","uploadButtonStyle","uploadButton","display","forwardRef","displayName"],"sources":["/Users/luongvantrung/Dropbox/Dropbox/Mac/Desktop/Final-project-fe27/node_modules/antd/es/upload/Upload.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/helpers/esm/regeneratorRuntime\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport classNames from 'classnames';\nimport RcUpload from 'rc-upload';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport * as React from 'react';\nimport { flushSync } from 'react-dom';\nimport { ConfigContext } from '../config-provider';\nimport DisabledContext from '../config-provider/DisabledContext';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport warning from '../_util/warning';\nimport UploadList from './UploadList';\nimport { file2Obj, getFileItem, removeFileItem, updateFileList } from './utils';\nexport var LIST_IGNORE = \"__LIST_IGNORE_\".concat(Date.now(), \"__\");\nvar InternalUpload = function InternalUpload(props, ref) {\n  var _classNames2;\n  var fileList = props.fileList,\n    defaultFileList = props.defaultFileList,\n    onRemove = props.onRemove,\n    _props$showUploadList = props.showUploadList,\n    showUploadList = _props$showUploadList === void 0 ? true : _props$showUploadList,\n    _props$listType = props.listType,\n    listType = _props$listType === void 0 ? 'text' : _props$listType,\n    onPreview = props.onPreview,\n    onDownload = props.onDownload,\n    onChange = props.onChange,\n    onDrop = props.onDrop,\n    previewFile = props.previewFile,\n    customDisabled = props.disabled,\n    propLocale = props.locale,\n    iconRender = props.iconRender,\n    isImageUrl = props.isImageUrl,\n    progress = props.progress,\n    customizePrefixCls = props.prefixCls,\n    className = props.className,\n    _props$type = props.type,\n    type = _props$type === void 0 ? 'select' : _props$type,\n    children = props.children,\n    style = props.style,\n    itemRender = props.itemRender,\n    maxCount = props.maxCount,\n    _props$data = props.data,\n    data = _props$data === void 0 ? {} : _props$data,\n    _props$multiple = props.multiple,\n    multiple = _props$multiple === void 0 ? false : _props$multiple,\n    _props$action = props.action,\n    action = _props$action === void 0 ? '' : _props$action,\n    _props$accept = props.accept,\n    accept = _props$accept === void 0 ? '' : _props$accept,\n    _props$supportServerR = props.supportServerRender,\n    supportServerRender = _props$supportServerR === void 0 ? true : _props$supportServerR;\n  // ===================== Disabled =====================\n  var disabled = React.useContext(DisabledContext);\n  var mergedDisabled = customDisabled !== null && customDisabled !== void 0 ? customDisabled : disabled;\n  var _useMergedState = useMergedState(defaultFileList || [], {\n      value: fileList,\n      postState: function postState(list) {\n        return list !== null && list !== void 0 ? list : [];\n      }\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    mergedFileList = _useMergedState2[0],\n    setMergedFileList = _useMergedState2[1];\n  var _React$useState = React.useState('drop'),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    dragState = _React$useState2[0],\n    setDragState = _React$useState2[1];\n  var upload = React.useRef(null);\n  process.env.NODE_ENV !== \"production\" ? warning('fileList' in props || !('value' in props), 'Upload', '`value` is not a valid prop, do you mean `fileList`?') : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!('transformFile' in props), 'Upload', '`transformFile` is deprecated. Please use `beforeUpload` directly.') : void 0;\n  // Control mode will auto fill file uid if not provided\n  React.useMemo(function () {\n    var timestamp = Date.now();\n    (fileList || []).forEach(function (file, index) {\n      if (!file.uid && !Object.isFrozen(file)) {\n        file.uid = \"__AUTO__\".concat(timestamp, \"_\").concat(index, \"__\");\n      }\n    });\n  }, [fileList]);\n  var onInternalChange = function onInternalChange(file, changedFileList, event) {\n    var cloneList = _toConsumableArray(changedFileList);\n    // Cut to match count\n    if (maxCount === 1) {\n      cloneList = cloneList.slice(-1);\n    } else if (maxCount) {\n      cloneList = cloneList.slice(0, maxCount);\n    }\n    // Prevent React18 auto batch since input[upload] trigger process at same time\n    // which makes fileList closure problem\n    flushSync(function () {\n      setMergedFileList(cloneList);\n    });\n    var changeInfo = {\n      file: file,\n      fileList: cloneList\n    };\n    if (event) {\n      changeInfo.event = event;\n    }\n    onChange === null || onChange === void 0 ? void 0 : onChange(changeInfo);\n  };\n  var mergedBeforeUpload = function mergedBeforeUpload(file, fileListArgs) {\n    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var beforeUpload, transformFile, parsedFile, result;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              beforeUpload = props.beforeUpload, transformFile = props.transformFile;\n              parsedFile = file;\n              if (!beforeUpload) {\n                _context.next = 13;\n                break;\n              }\n              _context.next = 5;\n              return beforeUpload(file, fileListArgs);\n            case 5:\n              result = _context.sent;\n              if (!(result === false)) {\n                _context.next = 8;\n                break;\n              }\n              return _context.abrupt(\"return\", false);\n            case 8:\n              // Hack for LIST_IGNORE, we add additional info to remove from the list\n              delete file[LIST_IGNORE];\n              if (!(result === LIST_IGNORE)) {\n                _context.next = 12;\n                break;\n              }\n              Object.defineProperty(file, LIST_IGNORE, {\n                value: true,\n                configurable: true\n              });\n              return _context.abrupt(\"return\", false);\n            case 12:\n              if (_typeof(result) === 'object' && result) {\n                parsedFile = result;\n              }\n            case 13:\n              if (!transformFile) {\n                _context.next = 17;\n                break;\n              }\n              _context.next = 16;\n              return transformFile(parsedFile);\n            case 16:\n              parsedFile = _context.sent;\n            case 17:\n              return _context.abrupt(\"return\", parsedFile);\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n  };\n  var onBatchStart = function onBatchStart(batchFileInfoList) {\n    // Skip file which marked as `LIST_IGNORE`, these file will not add to file list\n    var filteredFileInfoList = batchFileInfoList.filter(function (info) {\n      return !info.file[LIST_IGNORE];\n    });\n    // Nothing to do since no file need upload\n    if (!filteredFileInfoList.length) {\n      return;\n    }\n    var objectFileList = filteredFileInfoList.map(function (info) {\n      return file2Obj(info.file);\n    });\n    // Concat new files with prev files\n    var newFileList = _toConsumableArray(mergedFileList);\n    objectFileList.forEach(function (fileObj) {\n      // Replace file if exist\n      newFileList = updateFileList(fileObj, newFileList);\n    });\n    objectFileList.forEach(function (fileObj, index) {\n      // Repeat trigger `onChange` event for compatible\n      var triggerFileObj = fileObj;\n      if (!filteredFileInfoList[index].parsedFile) {\n        // `beforeUpload` return false\n        var originFileObj = fileObj.originFileObj;\n        var clone;\n        try {\n          clone = new File([originFileObj], originFileObj.name, {\n            type: originFileObj.type\n          });\n        } catch (e) {\n          clone = new Blob([originFileObj], {\n            type: originFileObj.type\n          });\n          clone.name = originFileObj.name;\n          clone.lastModifiedDate = new Date();\n          clone.lastModified = new Date().getTime();\n        }\n        clone.uid = fileObj.uid;\n        triggerFileObj = clone;\n      } else {\n        // Inject `uploading` status\n        fileObj.status = 'uploading';\n      }\n      onInternalChange(triggerFileObj, newFileList);\n    });\n  };\n  var onSuccess = function onSuccess(response, file, xhr) {\n    try {\n      if (typeof response === 'string') {\n        response = JSON.parse(response);\n      }\n    } catch (e) {\n      /* do nothing */\n    }\n    // removed\n    if (!getFileItem(file, mergedFileList)) {\n      return;\n    }\n    var targetItem = file2Obj(file);\n    targetItem.status = 'done';\n    targetItem.percent = 100;\n    targetItem.response = response;\n    targetItem.xhr = xhr;\n    var nextFileList = updateFileList(targetItem, mergedFileList);\n    onInternalChange(targetItem, nextFileList);\n  };\n  var onProgress = function onProgress(e, file) {\n    // removed\n    if (!getFileItem(file, mergedFileList)) {\n      return;\n    }\n    var targetItem = file2Obj(file);\n    targetItem.status = 'uploading';\n    targetItem.percent = e.percent;\n    var nextFileList = updateFileList(targetItem, mergedFileList);\n    onInternalChange(targetItem, nextFileList, e);\n  };\n  var onError = function onError(error, response, file) {\n    // removed\n    if (!getFileItem(file, mergedFileList)) {\n      return;\n    }\n    var targetItem = file2Obj(file);\n    targetItem.error = error;\n    targetItem.response = response;\n    targetItem.status = 'error';\n    var nextFileList = updateFileList(targetItem, mergedFileList);\n    onInternalChange(targetItem, nextFileList);\n  };\n  var handleRemove = function handleRemove(file) {\n    var currentFile;\n    Promise.resolve(typeof onRemove === 'function' ? onRemove(file) : onRemove).then(function (ret) {\n      var _a;\n      // Prevent removing file\n      if (ret === false) {\n        return;\n      }\n      var removedFileList = removeFileItem(file, mergedFileList);\n      if (removedFileList) {\n        currentFile = _extends(_extends({}, file), {\n          status: 'removed'\n        });\n        mergedFileList === null || mergedFileList === void 0 ? void 0 : mergedFileList.forEach(function (item) {\n          var matchKey = currentFile.uid !== undefined ? 'uid' : 'name';\n          if (item[matchKey] === currentFile[matchKey] && !Object.isFrozen(item)) {\n            item.status = 'removed';\n          }\n        });\n        (_a = upload.current) === null || _a === void 0 ? void 0 : _a.abort(currentFile);\n        onInternalChange(currentFile, removedFileList);\n      }\n    });\n  };\n  var onFileDrop = function onFileDrop(e) {\n    setDragState(e.type);\n    if (e.type === 'drop') {\n      onDrop === null || onDrop === void 0 ? void 0 : onDrop(e);\n    }\n  };\n  // Test needs\n  React.useImperativeHandle(ref, function () {\n    return {\n      onBatchStart: onBatchStart,\n      onSuccess: onSuccess,\n      onProgress: onProgress,\n      onError: onError,\n      fileList: mergedFileList,\n      upload: upload.current\n    };\n  });\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    direction = _React$useContext.direction;\n  var prefixCls = getPrefixCls('upload', customizePrefixCls);\n  var rcUploadProps = _extends(_extends({\n    onBatchStart: onBatchStart,\n    onError: onError,\n    onProgress: onProgress,\n    onSuccess: onSuccess\n  }, props), {\n    data: data,\n    multiple: multiple,\n    action: action,\n    accept: accept,\n    supportServerRender: supportServerRender,\n    prefixCls: prefixCls,\n    disabled: mergedDisabled,\n    beforeUpload: mergedBeforeUpload,\n    onChange: undefined\n  });\n  delete rcUploadProps.className;\n  delete rcUploadProps.style;\n  // Remove id to avoid open by label when trigger is hidden\n  // !children: https://github.com/ant-design/ant-design/issues/14298\n  // disabled: https://github.com/ant-design/ant-design/issues/16478\n  //           https://github.com/ant-design/ant-design/issues/24197\n  if (!children || mergedDisabled) {\n    delete rcUploadProps.id;\n  }\n  var renderUploadList = function renderUploadList(button, buttonVisible) {\n    return showUploadList ? /*#__PURE__*/React.createElement(LocaleReceiver, {\n      componentName: \"Upload\",\n      defaultLocale: defaultLocale.Upload\n    }, function (contextLocale) {\n      var _ref = typeof showUploadList === 'boolean' ? {} : showUploadList,\n        showRemoveIcon = _ref.showRemoveIcon,\n        showPreviewIcon = _ref.showPreviewIcon,\n        showDownloadIcon = _ref.showDownloadIcon,\n        removeIcon = _ref.removeIcon,\n        previewIcon = _ref.previewIcon,\n        downloadIcon = _ref.downloadIcon;\n      return /*#__PURE__*/React.createElement(UploadList, {\n        prefixCls: prefixCls,\n        listType: listType,\n        items: mergedFileList,\n        previewFile: previewFile,\n        onPreview: onPreview,\n        onDownload: onDownload,\n        onRemove: handleRemove,\n        showRemoveIcon: !mergedDisabled && showRemoveIcon,\n        showPreviewIcon: showPreviewIcon,\n        showDownloadIcon: showDownloadIcon,\n        removeIcon: removeIcon,\n        previewIcon: previewIcon,\n        downloadIcon: downloadIcon,\n        iconRender: iconRender,\n        locale: _extends(_extends({}, contextLocale), propLocale),\n        isImageUrl: isImageUrl,\n        progress: progress,\n        appendAction: button,\n        appendActionVisible: buttonVisible,\n        itemRender: itemRender\n      });\n    }) : button;\n  };\n  if (type === 'drag') {\n    var _classNames;\n    var dragCls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-drag\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-drag-uploading\"), mergedFileList.some(function (file) {\n      return file.status === 'uploading';\n    })), _defineProperty(_classNames, \"\".concat(prefixCls, \"-drag-hover\"), dragState === 'dragover'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), mergedDisabled), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n    return /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(\"div\", {\n      className: dragCls,\n      onDrop: onFileDrop,\n      onDragOver: onFileDrop,\n      onDragLeave: onFileDrop,\n      style: style\n    }, /*#__PURE__*/React.createElement(RcUpload, _extends({}, rcUploadProps, {\n      ref: upload,\n      className: \"\".concat(prefixCls, \"-btn\")\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-drag-container\")\n    }, children))), renderUploadList());\n  }\n  var uploadButtonCls = classNames(prefixCls, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-select\"), true), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-select-\").concat(listType), true), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-disabled\"), mergedDisabled), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames2));\n  var renderUploadButton = function renderUploadButton(uploadButtonStyle) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: uploadButtonCls,\n      style: uploadButtonStyle\n    }, /*#__PURE__*/React.createElement(RcUpload, _extends({}, rcUploadProps, {\n      ref: upload\n    })));\n  };\n  var uploadButton = renderUploadButton(children ? undefined : {\n    display: 'none'\n  });\n  if (listType === 'picture-card') {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames(\"\".concat(prefixCls, \"-picture-card-wrapper\"), className)\n    }, renderUploadList(uploadButton, !!children));\n  }\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: className\n  }, uploadButton, renderUploadList());\n};\nvar Upload = /*#__PURE__*/React.forwardRef(InternalUpload);\nif (process.env.NODE_ENV !== 'production') {\n  Upload.displayName = 'Upload';\n}\nexport default Upload;"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,2CAA5B;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,mBAAP,MAAgC,+CAAhC;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAOC,kBAAP,MAA+B,8CAA/B;AACA,OAAOC,cAAP,MAA2B,0CAA3B;;AACA,IAAIC,SAAS,GAAG,QAAQ,KAAKA,SAAb,IAA0B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;EACrF,SAASC,KAAT,CAAeC,KAAf,EAAsB;IACpB,OAAOA,KAAK,YAAYH,CAAjB,GAAqBG,KAArB,GAA6B,IAAIH,CAAJ,CAAM,UAAUI,OAAV,EAAmB;MAC3DA,OAAO,CAACD,KAAD,CAAP;IACD,CAFmC,CAApC;EAGD;;EACD,OAAO,KAAKH,CAAC,KAAKA,CAAC,GAAGK,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;IACzD,SAASC,SAAT,CAAmBJ,KAAnB,EAA0B;MACxB,IAAI;QACFK,IAAI,CAACP,SAAS,CAACQ,IAAV,CAAeN,KAAf,CAAD,CAAJ;MACD,CAFD,CAEE,OAAOO,CAAP,EAAU;QACVJ,MAAM,CAACI,CAAD,CAAN;MACD;IACF;;IACD,SAASC,QAAT,CAAkBR,KAAlB,EAAyB;MACvB,IAAI;QACFK,IAAI,CAACP,SAAS,CAAC,OAAD,CAAT,CAAmBE,KAAnB,CAAD,CAAJ;MACD,CAFD,CAEE,OAAOO,CAAP,EAAU;QACVJ,MAAM,CAACI,CAAD,CAAN;MACD;IACF;;IACD,SAASF,IAAT,CAAcI,MAAd,EAAsB;MACpBA,MAAM,CAACC,IAAP,GAAcT,OAAO,CAACQ,MAAM,CAACT,KAAR,CAArB,GAAsCD,KAAK,CAACU,MAAM,CAACT,KAAR,CAAL,CAAoBW,IAApB,CAAyBP,SAAzB,EAAoCI,QAApC,CAAtC;IACD;;IACDH,IAAI,CAAC,CAACP,SAAS,GAAGA,SAAS,CAACc,KAAV,CAAgBjB,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDU,IAAzD,EAAD,CAAJ;EACD,CAnBM,CAAP;AAoBD,CA1BD;;AA2BA,OAAOO,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,cAAhC,EAAgDC,cAAhD,QAAsE,SAAtE;AACA,OAAO,IAAIC,WAAW,GAAG,iBAAiBC,MAAjB,CAAwBC,IAAI,CAACC,GAAL,EAAxB,EAAoC,IAApC,CAAlB;;AACP,IAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,KAAxB,EAA+BC,GAA/B,EAAoC;EACvD,IAAIC,YAAJ;;EACA,IAAIC,QAAQ,GAAGH,KAAK,CAACG,QAArB;EAAA,IACEC,eAAe,GAAGJ,KAAK,CAACI,eAD1B;EAAA,IAEEC,QAAQ,GAAGL,KAAK,CAACK,QAFnB;EAAA,IAGEC,qBAAqB,GAAGN,KAAK,CAACO,cAHhC;EAAA,IAIEA,cAAc,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,IAAnC,GAA0CA,qBAJ7D;EAAA,IAKEE,eAAe,GAAGR,KAAK,CAACS,QAL1B;EAAA,IAMEA,QAAQ,GAAGD,eAAe,KAAK,KAAK,CAAzB,GAA6B,MAA7B,GAAsCA,eANnD;EAAA,IAOEE,SAAS,GAAGV,KAAK,CAACU,SAPpB;EAAA,IAQEC,UAAU,GAAGX,KAAK,CAACW,UARrB;EAAA,IASEC,QAAQ,GAAGZ,KAAK,CAACY,QATnB;EAAA,IAUEC,MAAM,GAAGb,KAAK,CAACa,MAVjB;EAAA,IAWEC,WAAW,GAAGd,KAAK,CAACc,WAXtB;EAAA,IAYEC,cAAc,GAAGf,KAAK,CAACgB,QAZzB;EAAA,IAaEC,UAAU,GAAGjB,KAAK,CAACkB,MAbrB;EAAA,IAcEC,UAAU,GAAGnB,KAAK,CAACmB,UAdrB;EAAA,IAeEC,UAAU,GAAGpB,KAAK,CAACoB,UAfrB;EAAA,IAgBEC,QAAQ,GAAGrB,KAAK,CAACqB,QAhBnB;EAAA,IAiBEC,kBAAkB,GAAGtB,KAAK,CAACuB,SAjB7B;EAAA,IAkBEC,SAAS,GAAGxB,KAAK,CAACwB,SAlBpB;EAAA,IAmBEC,WAAW,GAAGzB,KAAK,CAAC0B,IAnBtB;EAAA,IAoBEA,IAAI,GAAGD,WAAW,KAAK,KAAK,CAArB,GAAyB,QAAzB,GAAoCA,WApB7C;EAAA,IAqBEE,QAAQ,GAAG3B,KAAK,CAAC2B,QArBnB;EAAA,IAsBEC,KAAK,GAAG5B,KAAK,CAAC4B,KAtBhB;EAAA,IAuBEC,UAAU,GAAG7B,KAAK,CAAC6B,UAvBrB;EAAA,IAwBEC,QAAQ,GAAG9B,KAAK,CAAC8B,QAxBnB;EAAA,IAyBEC,WAAW,GAAG/B,KAAK,CAACgC,IAzBtB;EAAA,IA0BEA,IAAI,GAAGD,WAAW,KAAK,KAAK,CAArB,GAAyB,EAAzB,GAA8BA,WA1BvC;EAAA,IA2BEE,eAAe,GAAGjC,KAAK,CAACkC,QA3B1B;EAAA,IA4BEA,QAAQ,GAAGD,eAAe,KAAK,KAAK,CAAzB,GAA6B,KAA7B,GAAqCA,eA5BlD;EAAA,IA6BEE,aAAa,GAAGnC,KAAK,CAACoC,MA7BxB;EAAA,IA8BEA,MAAM,GAAGD,aAAa,KAAK,KAAK,CAAvB,GAA2B,EAA3B,GAAgCA,aA9B3C;EAAA,IA+BEE,aAAa,GAAGrC,KAAK,CAACsC,MA/BxB;EAAA,IAgCEA,MAAM,GAAGD,aAAa,KAAK,KAAK,CAAvB,GAA2B,EAA3B,GAAgCA,aAhC3C;EAAA,IAiCEE,qBAAqB,GAAGvC,KAAK,CAACwC,mBAjChC;EAAA,IAkCEA,mBAAmB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,IAAnC,GAA0CA,qBAlClE,CAFuD,CAqCvD;;EACA,IAAIvB,QAAQ,GAAGjC,KAAK,CAAC0D,UAAN,CAAiBvD,eAAjB,CAAf;EACA,IAAIwD,cAAc,GAAG3B,cAAc,KAAK,IAAnB,IAA2BA,cAAc,KAAK,KAAK,CAAnD,GAAuDA,cAAvD,GAAwEC,QAA7F;;EACA,IAAI2B,eAAe,GAAG7D,cAAc,CAACsB,eAAe,IAAI,EAApB,EAAwB;IACxDrC,KAAK,EAAEoC,QADiD;IAExDyC,SAAS,EAAE,SAASA,SAAT,CAAmBC,IAAnB,EAAyB;MAClC,OAAOA,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmCA,IAAnC,GAA0C,EAAjD;IACD;EAJuD,CAAxB,CAApC;EAAA,IAMEC,gBAAgB,GAAGtF,cAAc,CAACmF,eAAD,EAAkB,CAAlB,CANnC;EAAA,IAOEI,cAAc,GAAGD,gBAAgB,CAAC,CAAD,CAPnC;EAAA,IAQEE,iBAAiB,GAAGF,gBAAgB,CAAC,CAAD,CARtC;;EASA,IAAIG,eAAe,GAAGlE,KAAK,CAACmE,QAAN,CAAe,MAAf,CAAtB;EAAA,IACEC,gBAAgB,GAAG3F,cAAc,CAACyF,eAAD,EAAkB,CAAlB,CADnC;EAAA,IAEEG,SAAS,GAAGD,gBAAgB,CAAC,CAAD,CAF9B;EAAA,IAGEE,YAAY,GAAGF,gBAAgB,CAAC,CAAD,CAHjC;;EAIA,IAAIG,MAAM,GAAGvE,KAAK,CAACwE,MAAN,CAAa,IAAb,CAAb;EACAC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCrE,OAAO,CAAC,cAAcW,KAAd,IAAuB,EAAE,WAAWA,KAAb,CAAxB,EAA6C,QAA7C,EAAuD,sDAAvD,CAA/C,GAAgK,KAAK,CAArK;EACAwD,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCrE,OAAO,CAAC,EAAE,mBAAmBW,KAArB,CAAD,EAA8B,QAA9B,EAAwC,oEAAxC,CAA/C,GAA+J,KAAK,CAApK,CAvDuD,CAwDvD;;EACAjB,KAAK,CAAC4E,OAAN,CAAc,YAAY;IACxB,IAAIC,SAAS,GAAG/D,IAAI,CAACC,GAAL,EAAhB;IACA,CAACK,QAAQ,IAAI,EAAb,EAAiB0D,OAAjB,CAAyB,UAAUC,IAAV,EAAgBC,KAAhB,EAAuB;MAC9C,IAAI,CAACD,IAAI,CAACE,GAAN,IAAa,CAACC,MAAM,CAACC,QAAP,CAAgBJ,IAAhB,CAAlB,EAAyC;QACvCA,IAAI,CAACE,GAAL,GAAW,WAAWpE,MAAX,CAAkBgE,SAAlB,EAA6B,GAA7B,EAAkChE,MAAlC,CAAyCmE,KAAzC,EAAgD,IAAhD,CAAX;MACD;IACF,CAJD;EAKD,CAPD,EAOG,CAAC5D,QAAD,CAPH;;EAQA,IAAIgE,gBAAgB,GAAG,SAASA,gBAAT,CAA0BL,IAA1B,EAAgCM,eAAhC,EAAiDC,KAAjD,EAAwD;IAC7E,IAAIC,SAAS,GAAG/G,kBAAkB,CAAC6G,eAAD,CAAlC,CAD6E,CAE7E;;;IACA,IAAItC,QAAQ,KAAK,CAAjB,EAAoB;MAClBwC,SAAS,GAAGA,SAAS,CAACC,KAAV,CAAgB,CAAC,CAAjB,CAAZ;IACD,CAFD,MAEO,IAAIzC,QAAJ,EAAc;MACnBwC,SAAS,GAAGA,SAAS,CAACC,KAAV,CAAgB,CAAhB,EAAmBzC,QAAnB,CAAZ;IACD,CAP4E,CAQ7E;IACA;;;IACA9C,SAAS,CAAC,YAAY;MACpBgE,iBAAiB,CAACsB,SAAD,CAAjB;IACD,CAFQ,CAAT;IAGA,IAAIE,UAAU,GAAG;MACfV,IAAI,EAAEA,IADS;MAEf3D,QAAQ,EAAEmE;IAFK,CAAjB;;IAIA,IAAID,KAAJ,EAAW;MACTG,UAAU,CAACH,KAAX,GAAmBA,KAAnB;IACD;;IACDzD,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAAC4D,UAAD,CAA5D;EACD,CArBD;;EAsBA,IAAIC,kBAAkB,GAAG,SAASA,kBAAT,CAA4BX,IAA5B,EAAkCY,YAAlC,EAAgD;IACvE,OAAOjH,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,aAAaJ,mBAAmB,GAAGsH,IAAtB,CAA2B,SAASC,OAAT,GAAmB;MAClG,IAAIC,YAAJ,EAAkBC,aAAlB,EAAiCC,UAAjC,EAA6CvG,MAA7C;MACA,OAAOnB,mBAAmB,GAAG2H,IAAtB,CAA2B,SAASC,QAAT,CAAkBC,QAAlB,EAA4B;QAC5D,OAAO,CAAP,EAAU;UACR,QAAQA,QAAQ,CAACC,IAAT,GAAgBD,QAAQ,CAAC7G,IAAjC;YACE,KAAK,CAAL;cACEwG,YAAY,GAAG7E,KAAK,CAAC6E,YAArB,EAAmCC,aAAa,GAAG9E,KAAK,CAAC8E,aAAzD;cACAC,UAAU,GAAGjB,IAAb;;cACA,IAAI,CAACe,YAAL,EAAmB;gBACjBK,QAAQ,CAAC7G,IAAT,GAAgB,EAAhB;gBACA;cACD;;cACD6G,QAAQ,CAAC7G,IAAT,GAAgB,CAAhB;cACA,OAAOwG,YAAY,CAACf,IAAD,EAAOY,YAAP,CAAnB;;YACF,KAAK,CAAL;cACElG,MAAM,GAAG0G,QAAQ,CAACE,IAAlB;;cACA,IAAI,EAAE5G,MAAM,KAAK,KAAb,CAAJ,EAAyB;gBACvB0G,QAAQ,CAAC7G,IAAT,GAAgB,CAAhB;gBACA;cACD;;cACD,OAAO6G,QAAQ,CAACG,MAAT,CAAgB,QAAhB,EAA0B,KAA1B,CAAP;;YACF,KAAK,CAAL;cACE;cACA,OAAOvB,IAAI,CAACnE,WAAD,CAAX;;cACA,IAAI,EAAEnB,MAAM,KAAKmB,WAAb,CAAJ,EAA+B;gBAC7BuF,QAAQ,CAAC7G,IAAT,GAAgB,EAAhB;gBACA;cACD;;cACD4F,MAAM,CAACqB,cAAP,CAAsBxB,IAAtB,EAA4BnE,WAA5B,EAAyC;gBACvC5B,KAAK,EAAE,IADgC;gBAEvCwH,YAAY,EAAE;cAFyB,CAAzC;cAIA,OAAOL,QAAQ,CAACG,MAAT,CAAgB,QAAhB,EAA0B,KAA1B,CAAP;;YACF,KAAK,EAAL;cACE,IAAI/H,OAAO,CAACkB,MAAD,CAAP,KAAoB,QAApB,IAAgCA,MAApC,EAA4C;gBAC1CuG,UAAU,GAAGvG,MAAb;cACD;;YACH,KAAK,EAAL;cACE,IAAI,CAACsG,aAAL,EAAoB;gBAClBI,QAAQ,CAAC7G,IAAT,GAAgB,EAAhB;gBACA;cACD;;cACD6G,QAAQ,CAAC7G,IAAT,GAAgB,EAAhB;cACA,OAAOyG,aAAa,CAACC,UAAD,CAApB;;YACF,KAAK,EAAL;cACEA,UAAU,GAAGG,QAAQ,CAACE,IAAtB;;YACF,KAAK,EAAL;cACE,OAAOF,QAAQ,CAACG,MAAT,CAAgB,QAAhB,EAA0BN,UAA1B,CAAP;;YACF,KAAK,EAAL;YACA,KAAK,KAAL;cACE,OAAOG,QAAQ,CAACM,IAAT,EAAP;UA9CJ;QAgDD;MACF,CAnDM,EAmDJZ,OAnDI,CAAP;IAoDD,CAtDqD,CAAtC,CAAhB;EAuDD,CAxDD;;EAyDA,IAAIa,YAAY,GAAG,SAASA,YAAT,CAAsBC,iBAAtB,EAAyC;IAC1D;IACA,IAAIC,oBAAoB,GAAGD,iBAAiB,CAACE,MAAlB,CAAyB,UAAUC,IAAV,EAAgB;MAClE,OAAO,CAACA,IAAI,CAAC/B,IAAL,CAAUnE,WAAV,CAAR;IACD,CAF0B,CAA3B,CAF0D,CAK1D;;IACA,IAAI,CAACgG,oBAAoB,CAACG,MAA1B,EAAkC;MAChC;IACD;;IACD,IAAIC,cAAc,GAAGJ,oBAAoB,CAACK,GAArB,CAAyB,UAAUH,IAAV,EAAgB;MAC5D,OAAOtG,QAAQ,CAACsG,IAAI,CAAC/B,IAAN,CAAf;IACD,CAFoB,CAArB,CAT0D,CAY1D;;IACA,IAAImC,WAAW,GAAG1I,kBAAkB,CAACwF,cAAD,CAApC;;IACAgD,cAAc,CAAClC,OAAf,CAAuB,UAAUqC,OAAV,EAAmB;MACxC;MACAD,WAAW,GAAGvG,cAAc,CAACwG,OAAD,EAAUD,WAAV,CAA5B;IACD,CAHD;IAIAF,cAAc,CAAClC,OAAf,CAAuB,UAAUqC,OAAV,EAAmBnC,KAAnB,EAA0B;MAC/C;MACA,IAAIoC,cAAc,GAAGD,OAArB;;MACA,IAAI,CAACP,oBAAoB,CAAC5B,KAAD,CAApB,CAA4BgB,UAAjC,EAA6C;QAC3C;QACA,IAAIqB,aAAa,GAAGF,OAAO,CAACE,aAA5B;QACA,IAAIC,KAAJ;;QACA,IAAI;UACFA,KAAK,GAAG,IAAIC,IAAJ,CAAS,CAACF,aAAD,CAAT,EAA0BA,aAAa,CAACG,IAAxC,EAA8C;YACpD7E,IAAI,EAAE0E,aAAa,CAAC1E;UADgC,CAA9C,CAAR;QAGD,CAJD,CAIE,OAAOpD,CAAP,EAAU;UACV+H,KAAK,GAAG,IAAIG,IAAJ,CAAS,CAACJ,aAAD,CAAT,EAA0B;YAChC1E,IAAI,EAAE0E,aAAa,CAAC1E;UADY,CAA1B,CAAR;UAGA2E,KAAK,CAACE,IAAN,GAAaH,aAAa,CAACG,IAA3B;UACAF,KAAK,CAACI,gBAAN,GAAyB,IAAI5G,IAAJ,EAAzB;UACAwG,KAAK,CAACK,YAAN,GAAqB,IAAI7G,IAAJ,GAAW8G,OAAX,EAArB;QACD;;QACDN,KAAK,CAACrC,GAAN,GAAYkC,OAAO,CAAClC,GAApB;QACAmC,cAAc,GAAGE,KAAjB;MACD,CAlBD,MAkBO;QACL;QACAH,OAAO,CAACU,MAAR,GAAiB,WAAjB;MACD;;MACDzC,gBAAgB,CAACgC,cAAD,EAAiBF,WAAjB,CAAhB;IACD,CA1BD;EA2BD,CA7CD;;EA8CA,IAAIY,SAAS,GAAG,SAASA,SAAT,CAAmBC,QAAnB,EAA6BhD,IAA7B,EAAmCiD,GAAnC,EAAwC;IACtD,IAAI;MACF,IAAI,OAAOD,QAAP,KAAoB,QAAxB,EAAkC;QAChCA,QAAQ,GAAGE,IAAI,CAACC,KAAL,CAAWH,QAAX,CAAX;MACD;IACF,CAJD,CAIE,OAAOxI,CAAP,EAAU;MACV;IACD,CAPqD,CAQtD;;;IACA,IAAI,CAACkB,WAAW,CAACsE,IAAD,EAAOf,cAAP,CAAhB,EAAwC;MACtC;IACD;;IACD,IAAImE,UAAU,GAAG3H,QAAQ,CAACuE,IAAD,CAAzB;IACAoD,UAAU,CAACN,MAAX,GAAoB,MAApB;IACAM,UAAU,CAACC,OAAX,GAAqB,GAArB;IACAD,UAAU,CAACJ,QAAX,GAAsBA,QAAtB;IACAI,UAAU,CAACH,GAAX,GAAiBA,GAAjB;IACA,IAAIK,YAAY,GAAG1H,cAAc,CAACwH,UAAD,EAAanE,cAAb,CAAjC;IACAoB,gBAAgB,CAAC+C,UAAD,EAAaE,YAAb,CAAhB;EACD,CAnBD;;EAoBA,IAAIC,UAAU,GAAG,SAASA,UAAT,CAAoB/I,CAApB,EAAuBwF,IAAvB,EAA6B;IAC5C;IACA,IAAI,CAACtE,WAAW,CAACsE,IAAD,EAAOf,cAAP,CAAhB,EAAwC;MACtC;IACD;;IACD,IAAImE,UAAU,GAAG3H,QAAQ,CAACuE,IAAD,CAAzB;IACAoD,UAAU,CAACN,MAAX,GAAoB,WAApB;IACAM,UAAU,CAACC,OAAX,GAAqB7I,CAAC,CAAC6I,OAAvB;IACA,IAAIC,YAAY,GAAG1H,cAAc,CAACwH,UAAD,EAAanE,cAAb,CAAjC;IACAoB,gBAAgB,CAAC+C,UAAD,EAAaE,YAAb,EAA2B9I,CAA3B,CAAhB;EACD,CAVD;;EAWA,IAAIgJ,OAAO,GAAG,SAASA,OAAT,CAAiBC,KAAjB,EAAwBT,QAAxB,EAAkChD,IAAlC,EAAwC;IACpD;IACA,IAAI,CAACtE,WAAW,CAACsE,IAAD,EAAOf,cAAP,CAAhB,EAAwC;MACtC;IACD;;IACD,IAAImE,UAAU,GAAG3H,QAAQ,CAACuE,IAAD,CAAzB;IACAoD,UAAU,CAACK,KAAX,GAAmBA,KAAnB;IACAL,UAAU,CAACJ,QAAX,GAAsBA,QAAtB;IACAI,UAAU,CAACN,MAAX,GAAoB,OAApB;IACA,IAAIQ,YAAY,GAAG1H,cAAc,CAACwH,UAAD,EAAanE,cAAb,CAAjC;IACAoB,gBAAgB,CAAC+C,UAAD,EAAaE,YAAb,CAAhB;EACD,CAXD;;EAYA,IAAII,YAAY,GAAG,SAASA,YAAT,CAAsB1D,IAAtB,EAA4B;IAC7C,IAAI2D,WAAJ;IACAxJ,OAAO,CAACD,OAAR,CAAgB,OAAOqC,QAAP,KAAoB,UAApB,GAAiCA,QAAQ,CAACyD,IAAD,CAAzC,GAAkDzD,QAAlE,EAA4E3B,IAA5E,CAAiF,UAAUgJ,GAAV,EAAe;MAC9F,IAAIC,EAAJ,CAD8F,CAE9F;;;MACA,IAAID,GAAG,KAAK,KAAZ,EAAmB;QACjB;MACD;;MACD,IAAIE,eAAe,GAAGnI,cAAc,CAACqE,IAAD,EAAOf,cAAP,CAApC;;MACA,IAAI6E,eAAJ,EAAqB;QACnBH,WAAW,GAAGrK,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAK0G,IAAL,CAAT,EAAqB;UACzC8C,MAAM,EAAE;QADiC,CAArB,CAAtB;QAGA7D,cAAc,KAAK,IAAnB,IAA2BA,cAAc,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,cAAc,CAACc,OAAf,CAAuB,UAAUgE,IAAV,EAAgB;UACrG,IAAIC,QAAQ,GAAGL,WAAW,CAACzD,GAAZ,KAAoB+D,SAApB,GAAgC,KAAhC,GAAwC,MAAvD;;UACA,IAAIF,IAAI,CAACC,QAAD,CAAJ,KAAmBL,WAAW,CAACK,QAAD,CAA9B,IAA4C,CAAC7D,MAAM,CAACC,QAAP,CAAgB2D,IAAhB,CAAjD,EAAwE;YACtEA,IAAI,CAACjB,MAAL,GAAc,SAAd;UACD;QACF,CAL+D,CAAhE;QAMA,CAACe,EAAE,GAAGrE,MAAM,CAAC0E,OAAb,MAA0B,IAA1B,IAAkCL,EAAE,KAAK,KAAK,CAA9C,GAAkD,KAAK,CAAvD,GAA2DA,EAAE,CAACM,KAAH,CAASR,WAAT,CAA3D;QACAtD,gBAAgB,CAACsD,WAAD,EAAcG,eAAd,CAAhB;MACD;IACF,CApBD;EAqBD,CAvBD;;EAwBA,IAAIM,UAAU,GAAG,SAASA,UAAT,CAAoB5J,CAApB,EAAuB;IACtC+E,YAAY,CAAC/E,CAAC,CAACoD,IAAH,CAAZ;;IACA,IAAIpD,CAAC,CAACoD,IAAF,KAAW,MAAf,EAAuB;MACrBb,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACvC,CAAD,CAAtD;IACD;EACF,CALD,CAjQuD,CAuQvD;;;EACAS,KAAK,CAACoJ,mBAAN,CAA0BlI,GAA1B,EAA+B,YAAY;IACzC,OAAO;MACLwF,YAAY,EAAEA,YADT;MAELoB,SAAS,EAAEA,SAFN;MAGLQ,UAAU,EAAEA,UAHP;MAILC,OAAO,EAAEA,OAJJ;MAKLnH,QAAQ,EAAE4C,cALL;MAMLO,MAAM,EAAEA,MAAM,CAAC0E;IANV,CAAP;EAQD,CATD;;EAUA,IAAII,iBAAiB,GAAGrJ,KAAK,CAAC0D,UAAN,CAAiBxD,aAAjB,CAAxB;EAAA,IACEoJ,YAAY,GAAGD,iBAAiB,CAACC,YADnC;EAAA,IAEEC,SAAS,GAAGF,iBAAiB,CAACE,SAFhC;;EAGA,IAAI/G,SAAS,GAAG8G,YAAY,CAAC,QAAD,EAAW/G,kBAAX,CAA5B;;EACA,IAAIiH,aAAa,GAAGnL,QAAQ,CAACA,QAAQ,CAAC;IACpCqI,YAAY,EAAEA,YADsB;IAEpC6B,OAAO,EAAEA,OAF2B;IAGpCD,UAAU,EAAEA,UAHwB;IAIpCR,SAAS,EAAEA;EAJyB,CAAD,EAKlC7G,KALkC,CAAT,EAKjB;IACTgC,IAAI,EAAEA,IADG;IAETE,QAAQ,EAAEA,QAFD;IAGTE,MAAM,EAAEA,MAHC;IAITE,MAAM,EAAEA,MAJC;IAKTE,mBAAmB,EAAEA,mBALZ;IAMTjB,SAAS,EAAEA,SANF;IAOTP,QAAQ,EAAE0B,cAPD;IAQTmC,YAAY,EAAEJ,kBARL;IAST7D,QAAQ,EAAEmH;EATD,CALiB,CAA5B;;EAgBA,OAAOQ,aAAa,CAAC/G,SAArB;EACA,OAAO+G,aAAa,CAAC3G,KAArB,CAvSuD,CAwSvD;EACA;EACA;EACA;;EACA,IAAI,CAACD,QAAD,IAAae,cAAjB,EAAiC;IAC/B,OAAO6F,aAAa,CAACC,EAArB;EACD;;EACD,IAAIC,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,MAA1B,EAAkCC,aAAlC,EAAiD;IACtE,OAAOpI,cAAc,GAAG,aAAaxB,KAAK,CAAC6J,aAAN,CAAoBzJ,cAApB,EAAoC;MACvE0J,aAAa,EAAE,QADwD;MAEvEzJ,aAAa,EAAEA,aAAa,CAAC0J;IAF0C,CAApC,EAGlC,UAAUC,aAAV,EAAyB;MAC1B,IAAIC,IAAI,GAAG,OAAOzI,cAAP,KAA0B,SAA1B,GAAsC,EAAtC,GAA2CA,cAAtD;MAAA,IACE0I,cAAc,GAAGD,IAAI,CAACC,cADxB;MAAA,IAEEC,eAAe,GAAGF,IAAI,CAACE,eAFzB;MAAA,IAGEC,gBAAgB,GAAGH,IAAI,CAACG,gBAH1B;MAAA,IAIEC,UAAU,GAAGJ,IAAI,CAACI,UAJpB;MAAA,IAKEC,WAAW,GAAGL,IAAI,CAACK,WALrB;MAAA,IAMEC,YAAY,GAAGN,IAAI,CAACM,YANtB;;MAOA,OAAO,aAAavK,KAAK,CAAC6J,aAAN,CAAoBtJ,UAApB,EAAgC;QAClDiC,SAAS,EAAEA,SADuC;QAElDd,QAAQ,EAAEA,QAFwC;QAGlD8I,KAAK,EAAExG,cAH2C;QAIlDjC,WAAW,EAAEA,WAJqC;QAKlDJ,SAAS,EAAEA,SALuC;QAMlDC,UAAU,EAAEA,UANsC;QAOlDN,QAAQ,EAAEmH,YAPwC;QAQlDyB,cAAc,EAAE,CAACvG,cAAD,IAAmBuG,cARe;QASlDC,eAAe,EAAEA,eATiC;QAUlDC,gBAAgB,EAAEA,gBAVgC;QAWlDC,UAAU,EAAEA,UAXsC;QAYlDC,WAAW,EAAEA,WAZqC;QAalDC,YAAY,EAAEA,YAboC;QAclDnI,UAAU,EAAEA,UAdsC;QAelDD,MAAM,EAAE9D,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAK2L,aAAL,CAAT,EAA8B9H,UAA9B,CAfkC;QAgBlDG,UAAU,EAAEA,UAhBsC;QAiBlDC,QAAQ,EAAEA,QAjBwC;QAkBlDmI,YAAY,EAAEd,MAlBoC;QAmBlDe,mBAAmB,EAAEd,aAnB6B;QAoBlD9G,UAAU,EAAEA;MApBsC,CAAhC,CAApB;IAsBD,CAjCoC,CAAhB,GAiChB6G,MAjCL;EAkCD,CAnCD;;EAoCA,IAAIhH,IAAI,KAAK,MAAb,EAAqB;IACnB,IAAIgI,WAAJ;;IACA,IAAIC,OAAO,GAAG/K,UAAU,CAAC2C,SAAD,GAAamI,WAAW,GAAG,EAAd,EAAkBvM,eAAe,CAACuM,WAAD,EAAc,GAAG9J,MAAH,CAAU2B,SAAV,EAAqB,OAArB,CAAd,EAA6C,IAA7C,CAAjC,EAAqFpE,eAAe,CAACuM,WAAD,EAAc,GAAG9J,MAAH,CAAU2B,SAAV,EAAqB,iBAArB,CAAd,EAAuDwB,cAAc,CAAC6G,IAAf,CAAoB,UAAU9F,IAAV,EAAgB;MAClO,OAAOA,IAAI,CAAC8C,MAAL,KAAgB,WAAvB;IACD,CAF+L,CAAvD,CAApG,EAEhCzJ,eAAe,CAACuM,WAAD,EAAc,GAAG9J,MAAH,CAAU2B,SAAV,EAAqB,aAArB,CAAd,EAAmD6B,SAAS,KAAK,UAAjE,CAFiB,EAE6DjG,eAAe,CAACuM,WAAD,EAAc,GAAG9J,MAAH,CAAU2B,SAAV,EAAqB,WAArB,CAAd,EAAiDmB,cAAjD,CAF5E,EAE8IvF,eAAe,CAACuM,WAAD,EAAc,GAAG9J,MAAH,CAAU2B,SAAV,EAAqB,MAArB,CAAd,EAA4C+G,SAAS,KAAK,KAA1D,CAF7J,EAE+NoB,WAF5O,GAE0PlI,SAF1P,CAAxB;IAGA,OAAO,aAAazC,KAAK,CAAC6J,aAAN,CAAoB,MAApB,EAA4B,IAA5B,EAAkC,aAAa7J,KAAK,CAAC6J,aAAN,CAAoB,KAApB,EAA2B;MAC5FpH,SAAS,EAAEmI,OADiF;MAE5F9I,MAAM,EAAEqH,UAFoF;MAG5F2B,UAAU,EAAE3B,UAHgF;MAI5F4B,WAAW,EAAE5B,UAJ+E;MAK5FtG,KAAK,EAAEA;IALqF,CAA3B,EAMhE,aAAa7C,KAAK,CAAC6J,aAAN,CAAoB/J,QAApB,EAA8BzB,QAAQ,CAAC,EAAD,EAAKmL,aAAL,EAAoB;MACxEtI,GAAG,EAAEqD,MADmE;MAExE9B,SAAS,EAAE,GAAG5B,MAAH,CAAU2B,SAAV,EAAqB,MAArB;IAF6D,CAApB,CAAtC,EAGZ,aAAaxC,KAAK,CAAC6J,aAAN,CAAoB,KAApB,EAA2B;MAC1CpH,SAAS,EAAE,GAAG5B,MAAH,CAAU2B,SAAV,EAAqB,iBAArB;IAD+B,CAA3B,EAEdI,QAFc,CAHD,CANmD,CAA/C,EAWJ8G,gBAAgB,EAXZ,CAApB;EAYD;;EACD,IAAIsB,eAAe,GAAGnL,UAAU,CAAC2C,SAAD,GAAarB,YAAY,GAAG,EAAf,EAAmB/C,eAAe,CAAC+C,YAAD,EAAe,GAAGN,MAAH,CAAU2B,SAAV,EAAqB,SAArB,CAAf,EAAgD,IAAhD,CAAlC,EAAyFpE,eAAe,CAAC+C,YAAD,EAAe,GAAGN,MAAH,CAAU2B,SAAV,EAAqB,UAArB,EAAiC3B,MAAjC,CAAwCa,QAAxC,CAAf,EAAkE,IAAlE,CAAxG,EAAiLtD,eAAe,CAAC+C,YAAD,EAAe,GAAGN,MAAH,CAAU2B,SAAV,EAAqB,WAArB,CAAf,EAAkDmB,cAAlD,CAAhM,EAAmQvF,eAAe,CAAC+C,YAAD,EAAe,GAAGN,MAAH,CAAU2B,SAAV,EAAqB,MAArB,CAAf,EAA6C+G,SAAS,KAAK,KAA3D,CAAlR,EAAqVpI,YAAlW,EAAhC;;EACA,IAAI8J,kBAAkB,GAAG,SAASA,kBAAT,CAA4BC,iBAA5B,EAA+C;IACtE,OAAO,aAAalL,KAAK,CAAC6J,aAAN,CAAoB,KAApB,EAA2B;MAC7CpH,SAAS,EAAEuI,eADkC;MAE7CnI,KAAK,EAAEqI;IAFsC,CAA3B,EAGjB,aAAalL,KAAK,CAAC6J,aAAN,CAAoB/J,QAApB,EAA8BzB,QAAQ,CAAC,EAAD,EAAKmL,aAAL,EAAoB;MACxEtI,GAAG,EAAEqD;IADmE,CAApB,CAAtC,CAHI,CAApB;EAMD,CAPD;;EAQA,IAAI4G,YAAY,GAAGF,kBAAkB,CAACrI,QAAQ,GAAGoG,SAAH,GAAe;IAC3DoC,OAAO,EAAE;EADkD,CAAxB,CAArC;;EAGA,IAAI1J,QAAQ,KAAK,cAAjB,EAAiC;IAC/B,OAAO,aAAa1B,KAAK,CAAC6J,aAAN,CAAoB,MAApB,EAA4B;MAC9CpH,SAAS,EAAE5C,UAAU,CAAC,GAAGgB,MAAH,CAAU2B,SAAV,EAAqB,uBAArB,CAAD,EAAgDC,SAAhD;IADyB,CAA5B,EAEjBiH,gBAAgB,CAACyB,YAAD,EAAe,CAAC,CAACvI,QAAjB,CAFC,CAApB;EAGD;;EACD,OAAO,aAAa5C,KAAK,CAAC6J,aAAN,CAAoB,MAApB,EAA4B;IAC9CpH,SAAS,EAAEA;EADmC,CAA5B,EAEjB0I,YAFiB,EAEHzB,gBAAgB,EAFb,CAApB;AAGD,CAzXD;;AA0XA,IAAIK,MAAM,GAAG,aAAa/J,KAAK,CAACqL,UAAN,CAAiBrK,cAAjB,CAA1B;;AACA,IAAIyD,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;EACzCoF,MAAM,CAACuB,WAAP,GAAqB,QAArB;AACD;;AACD,eAAevB,MAAf"},"metadata":{},"sourceType":"module"}