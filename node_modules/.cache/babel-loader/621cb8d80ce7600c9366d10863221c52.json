{"ast":null,"code":"import { put, takeEvery, delay } from \"redux-saga/effects\";\nimport { addProductAction, addProductActionFailed, addProductActionSuccess, deleteProductAction, deleteProductActionFailed, deleteProductActionSuccess, fetchProductAction, fetchProductActionFailed, fetchProductActionSuccess, searchProductAction, searchProductActionFailed, searchProductActionSuccess } from \"stores/slices/product.slice.js\";\nimport { ProductAPI } from \"api/product.api.js\";\n\nfunction* fetchProduct(action) {\n  try {\n    yield delay(1000);\n    const response = yield ProductAPI.fetchProduct(action.payload);\n    const productData = response.data;\n    const totalProduct = response.headers[\"x-total-count\"]; // Put 1 action đã được định nghĩa ở slice\n\n    yield put(fetchProductActionSuccess({\n      data: productData,\n      totalProduct: totalProduct\n    }));\n  } catch (e) {\n    // Put 1 action đã được định nghĩa ở slice\n    yield put(fetchProductActionFailed(e.response.data));\n  }\n}\n\nfunction* searchProduct(action) {\n  try {\n    yield delay(1000);\n    const response = yield ProductAPI.searchProduct(action.payload); // Put 1 action đã được định nghĩa ở slice\n\n    yield put(searchProductActionSuccess(response.data));\n  } catch (e) {\n    // Put 1 action đã được định nghĩa ở slice\n    yield put(searchProductActionFailed(e.response.data));\n  }\n}\n\nfunction* addProduct(action) {\n  try {\n    // console.log(\"data:\", action.payload);\n    // const addPayload = action.payload;\n    const response = yield ProductAPI.addProduct(action.payload); // {\n    //   name: addPayload.name,\n    //   price: addPayload.price,\n    //   img: addPayload.img,\n    //   category: addPayload.category,\n    //   feature: addPayload.feature,\n    //   size: addPayload.size,\n    //   quantity: addPayload.quantity,\n    // }\n\n    console.log(\"product:\", response); // Put 1 action đã được định nghĩa ở slice\n\n    yield put(addProductActionSuccess(response.data));\n  } catch (e) {\n    // Put 1 action đã được định nghĩa ở slice\n    yield put(addProductActionFailed(e.response.data));\n  }\n}\n\nfunction* deleteProduct(action) {\n  try {\n    const response = yield ProductAPI.deleteProduct(action.payload); // Put 1 action đã được định nghĩa ở slice\n\n    yield put(deleteProductActionSuccess(response.data));\n  } catch (e) {\n    // Put 1 action đã được định nghĩa ở slice\n    console.log(e);\n    yield put(deleteProductActionFailed(e.response.data));\n  }\n}\n\nexport function* productSaga() {\n  yield takeEvery(fetchProductAction, fetchProduct);\n  yield takeEvery(searchProductAction, searchProduct);\n  yield takeEvery(addProductAction, addProduct);\n  yield takeEvery(deleteProductAction, deleteProduct);\n}","map":{"version":3,"names":["put","takeEvery","delay","addProductAction","addProductActionFailed","addProductActionSuccess","deleteProductAction","deleteProductActionFailed","deleteProductActionSuccess","fetchProductAction","fetchProductActionFailed","fetchProductActionSuccess","searchProductAction","searchProductActionFailed","searchProductActionSuccess","ProductAPI","fetchProduct","action","response","payload","productData","data","totalProduct","headers","e","searchProduct","addProduct","console","log","deleteProduct","productSaga"],"sources":["/Users/luongvantrung/Dropbox/Dropbox/Mac/Desktop/Final-project-fe27/src/stores/sagas/product.saga.js"],"sourcesContent":["import { put, takeEvery, delay } from \"redux-saga/effects\";\nimport {\n  addProductAction,\n  addProductActionFailed,\n  addProductActionSuccess,\n  deleteProductAction,\n  deleteProductActionFailed,\n  deleteProductActionSuccess,\n  fetchProductAction,\n  fetchProductActionFailed,\n  fetchProductActionSuccess,\n  searchProductAction,\n  searchProductActionFailed,\n  searchProductActionSuccess,\n} from \"stores/slices/product.slice.js\";\nimport { ProductAPI } from \"api/product.api.js\";\n\nfunction* fetchProduct(action) {\n  try {\n    yield delay(1000);\n    const response = yield ProductAPI.fetchProduct(action.payload);\n    const productData = response.data;\n    const totalProduct = response.headers[\"x-total-count\"];\n\n    // Put 1 action đã được định nghĩa ở slice\n    yield put(\n      fetchProductActionSuccess({\n        data: productData,\n        totalProduct: totalProduct,\n      })\n    );\n  } catch (e) {\n    // Put 1 action đã được định nghĩa ở slice\n    yield put(fetchProductActionFailed(e.response.data));\n  }\n}\n\nfunction* searchProduct(action) {\n  try {\n    yield delay(1000);\n    const response = yield ProductAPI.searchProduct(action.payload);\n    // Put 1 action đã được định nghĩa ở slice\n    yield put(\n      searchProductActionSuccess(response.data)\n    );\n  } catch (e) {\n    // Put 1 action đã được định nghĩa ở slice\n    yield put(searchProductActionFailed(e.response.data));\n  }\n}\n\nfunction* addProduct(action) {\n  try {\n    // console.log(\"data:\", action.payload);\n    // const addPayload = action.payload;\n    const response = yield ProductAPI.addProduct(action.payload);\n    // {\n    //   name: addPayload.name,\n    //   price: addPayload.price,\n    //   img: addPayload.img,\n    //   category: addPayload.category,\n    //   feature: addPayload.feature,\n    //   size: addPayload.size,\n    //   quantity: addPayload.quantity,\n    // }\n    console.log(\"product:\", response);\n    // Put 1 action đã được định nghĩa ở slice\n    yield put(\n      addProductActionSuccess(response.data)\n    );\n  } catch (e) {\n    // Put 1 action đã được định nghĩa ở slice\n    yield put(addProductActionFailed(e.response.data));\n  }\n}\n\nfunction* deleteProduct(action) {\n  try {\n    const response = yield ProductAPI.deleteProduct(action.payload);\n    // Put 1 action đã được định nghĩa ở slice\n    yield put(\n      deleteProductActionSuccess(response.data)\n    );\n  } catch (e) {\n    // Put 1 action đã được định nghĩa ở slice\n    console.log(e);\n    yield put(deleteProductActionFailed(e.response.data));\n  }\n}\n\nexport function* productSaga() {\n  yield takeEvery(fetchProductAction, fetchProduct);\n  yield takeEvery(searchProductAction, searchProduct);\n  yield takeEvery(addProductAction, addProduct);\n  yield takeEvery(deleteProductAction, deleteProduct);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}