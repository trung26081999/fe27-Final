{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { CART_LIMIT } from './cart.slice';\nconst initialState = {\n  ordersState: {\n    data: [],\n    loading: false,\n    error: null,\n    // Thông tin phân trang\n    pagination: {\n      // Trang hiện tại\n      page: 1,\n      // Số record trả về trong 1 trang\n      limit: CART_LIMIT,\n      // Tổng số record từ server\n      total: null,\n      // Tổng số trang\n      totalPage: null\n    }\n  }\n};\nexport const ordersSlice = createSlice({\n  name: 'orders',\n  initialState,\n  reducers: {\n    getListOrdersAction: (state, action) => {\n      state.ordersState = { ...state.ordersState,\n        loading: true\n      };\n    },\n    getListOrdersActionSuccess: (state, action) => {\n      const {\n        data,\n        totalProduct\n      } = action.payload;\n      state.ordersState = { ...state.ordersState,\n        data,\n        loading: false,\n        pagination: { ...state.ordersState.pagination,\n          total: +totalProduct,\n          totalPage: totalProduct / CART_LIMIT\n        }\n      };\n    },\n    getListOrdersActionFailed: (state, action) => {},\n    addOrdersAction: (state, action) => {\n      state.ordersState = { ...state.ordersState,\n        loading: true\n      };\n    },\n    addOrdersSuccess: (state, action) => {\n      state.ordersState = { ...state.ordersState,\n        loading: false\n      };\n    },\n    addOrdersFailed: (state, action) => {}\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  getListOrdersAction,\n  getListOrdersActionSuccess,\n  getListOrdersActionFailed,\n  addOrdersAction,\n  addOrdersSuccess,\n  addOrdersFailed\n} = ordersSlice.actions;\nexport const ordersReducer = ordersSlice.reducer;","map":{"version":3,"names":["createSlice","CART_LIMIT","initialState","ordersState","data","loading","error","pagination","page","limit","total","totalPage","ordersSlice","name","reducers","getListOrdersAction","state","action","getListOrdersActionSuccess","totalProduct","payload","getListOrdersActionFailed","addOrdersAction","addOrdersSuccess","addOrdersFailed","actions","ordersReducer","reducer"],"sources":["/Users/luongvantrung/Dropbox/Dropbox/Mac/Desktop/Final-project-fe27/src/stores/slices/orders.slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { CART_LIMIT } from './cart.slice';\n\nconst initialState = {\n    ordersState: {\n        data: [],\n        loading: false,\n        error: null,\n        // Thông tin phân trang\n        pagination: {\n            // Trang hiện tại\n            page: 1,\n            // Số record trả về trong 1 trang\n            limit: CART_LIMIT,\n            // Tổng số record từ server\n            total: null,\n            // Tổng số trang\n            totalPage: null,\n        },\n    },\n};\n\nexport const ordersSlice = createSlice({\n    name: 'orders',\n    initialState,\n    reducers: {\n        getListOrdersAction: (state, action) => {\n            state.ordersState = {\n                ...state.ordersState,\n                loading: true,\n            };\n        },\n        getListOrdersActionSuccess: (state, action) => {\n            const { data, totalProduct } = action.payload;\n            state.ordersState = {\n                ...state.ordersState,\n                data,\n                loading: false,\n                pagination: {\n                    ...state.ordersState.pagination,\n                    total: +totalProduct,\n                    totalPage: totalProduct / CART_LIMIT,\n                },\n            };\n        },\n        getListOrdersActionFailed: (state, action) => {\n\n        },\n\n        addOrdersAction: (state, action) => {\n            state.ordersState = {\n                ...state.ordersState,\n                loading: true,\n            };\n        },\n        addOrdersSuccess: (state, action) => {\n            state.ordersState = {\n                ...state.ordersState,\n                loading: false,\n            };\n        },\n        addOrdersFailed: (state, action) => {\n\n        }\n    },\n})\n\n// Action creators are generated for each case reducer function\nexport const {\n    getListOrdersAction,\n    getListOrdersActionSuccess,\n    getListOrdersActionFailed,\n    addOrdersAction,\n    addOrdersSuccess,\n    addOrdersFailed\n} = ordersSlice.actions;\n\nexport const ordersReducer = ordersSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE;IACTC,IAAI,EAAE,EADG;IAETC,OAAO,EAAE,KAFA;IAGTC,KAAK,EAAE,IAHE;IAIT;IACAC,UAAU,EAAE;MACR;MACAC,IAAI,EAAE,CAFE;MAGR;MACAC,KAAK,EAAER,UAJC;MAKR;MACAS,KAAK,EAAE,IANC;MAOR;MACAC,SAAS,EAAE;IARH;EALH;AADI,CAArB;AAmBA,OAAO,MAAMC,WAAW,GAAGZ,WAAW,CAAC;EACnCa,IAAI,EAAE,QAD6B;EAEnCX,YAFmC;EAGnCY,QAAQ,EAAE;IACNC,mBAAmB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACpCD,KAAK,CAACb,WAAN,GAAoB,EAChB,GAAGa,KAAK,CAACb,WADO;QAEhBE,OAAO,EAAE;MAFO,CAApB;IAIH,CANK;IAONa,0BAA0B,EAAE,CAACF,KAAD,EAAQC,MAAR,KAAmB;MAC3C,MAAM;QAAEb,IAAF;QAAQe;MAAR,IAAyBF,MAAM,CAACG,OAAtC;MACAJ,KAAK,CAACb,WAAN,GAAoB,EAChB,GAAGa,KAAK,CAACb,WADO;QAEhBC,IAFgB;QAGhBC,OAAO,EAAE,KAHO;QAIhBE,UAAU,EAAE,EACR,GAAGS,KAAK,CAACb,WAAN,CAAkBI,UADb;UAERG,KAAK,EAAE,CAACS,YAFA;UAGRR,SAAS,EAAEQ,YAAY,GAAGlB;QAHlB;MAJI,CAApB;IAUH,CAnBK;IAoBNoB,yBAAyB,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB,CAE7C,CAtBK;IAwBNK,eAAe,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;MAChCD,KAAK,CAACb,WAAN,GAAoB,EAChB,GAAGa,KAAK,CAACb,WADO;QAEhBE,OAAO,EAAE;MAFO,CAApB;IAIH,CA7BK;IA8BNkB,gBAAgB,EAAE,CAACP,KAAD,EAAQC,MAAR,KAAmB;MACjCD,KAAK,CAACb,WAAN,GAAoB,EAChB,GAAGa,KAAK,CAACb,WADO;QAEhBE,OAAO,EAAE;MAFO,CAApB;IAIH,CAnCK;IAoCNmB,eAAe,EAAE,CAACR,KAAD,EAAQC,MAAR,KAAmB,CAEnC;EAtCK;AAHyB,CAAD,CAA/B,C,CA6CP;;AACA,OAAO,MAAM;EACTF,mBADS;EAETG,0BAFS;EAGTG,yBAHS;EAITC,eAJS;EAKTC,gBALS;EAMTC;AANS,IAOTZ,WAAW,CAACa,OAPT;AASP,OAAO,MAAMC,aAAa,GAAGd,WAAW,CAACe,OAAlC"},"metadata":{},"sourceType":"module"}